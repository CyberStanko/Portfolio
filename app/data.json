{
  "personalInfo": {
    "name": "INFANT STANKO F",
    "location": "Tiruchirappalli",
    "phone": "9025615730",
    "email": "infantstanko2003@gmail.com",
    "github": "https://github.com/CyberStanko",
    "linkedin": "https://www.linkedin.com/in/infantstankof",
    "summary": "I'm a software developer with strong skills in MERN Stack Development and Next.js, along with solid experience in Java and Python. I know how to use AI tools effectively to speed up development and improve the quality of my work. I've worked on full-stack web projects, building both powerful backends and interactive frontends. I'm good at solving problems, working with teams, and creating smart, modern solutions. I'm looking to join a forward-thinking team where I can use my skills and passion for tech to build great software."
  },
  "experience": [
    {
      "title": "Software Engineer",
      "company": "NearTechPod",
      "period": "15/01/2025 - Till Now",
      "description": "Working as a Associate Software Developer in this organization and developing website and doing the allocated tasks"
    },
    {
      "title": "Developer Intern & Coding Trainer Intern",
      "company": "T4TEQ Software Solutions",
      "period": "20/05/24 - 20/09/24",
      "responsibilities": [
        "Taught and mentored students in programming languages such as C, Java, Python, and more.",
        "Clarified coding doubts and guided students to strengthen their problem-solving skills.",
        "Conducted UI/UX design sessions using tools like Adobe Illustrator, Figma.",
        "Collaborated with peers and students, enhancing team coordination and communication skills."
      ]
    }
  ],
  "education": [
    {
      "degree": "Electronics and Communication Engineering / B.E",
      "institution": "K. Ramakrishnan College of Engineering",
      "year": "2024",
      "score": "7.72 CGPA"
    },
    {
      "degree": "Higher Secondary School",
      "institution": "Chelammal Matriculation Higher Secondary School",
      "year": "2020",
      "score": "62%"
    },
    {
      "degree": "Senior Secondary Education",
      "institution": "St. James Matriculation Higher Secondary School",
      "year": "2018",
      "score": "73%"
    }
  ],
  "skills": [
    "Core Java Programming",
    "Python Programming",
    "C Programming",
    "SQL",
    "Mongo DB",
    "Express JS",
    "React JS",
    "Node JS",
    "Next JS",
    "Node-RED"
  ],
  "courses": [
    "MERN STACK DEVELOPMENT (at T4TEQ Software Solutions)",
    "JAVA Full Stack (by Wipro Talentnext)",
    "MERN Stack Development (by PrepInsta)",
    "Core JAVA (at T4TEQ Software Solutions)",
    "Python (at T4TEQ Software Solutions)",
    "Advance C (at T4TEQ Software Solutions)",
    "MY SQL (W3 Schools)",
    "HTML CSS (at PrepInsta)",
    "Salesforce Developer Virtual Internship (by Smart Internz)",
    "Carrier Essential in Software Developer (by Microsoft)"
  ],
  "projects": [
    {
      "title": "Tic Tac Toe Game",
      "description": "Developed a Tic Tac Toe game using Next.js and Tailwind CSS.It has a dynamic board and also has a reset button to reset the game. It is a simple game that allows two players to play against each other. It is a fun game that can be played by anyone.",
      "repo": "https://github.com/CyberStanko/Tic-Tac-Toe-Game",
      "gameLink": "https://tic-tac-toe-game-git-main-stankos-projects-2405cb74.vercel.app"
    },
    {
      "title": "Blog Web App",
      "description": "A web app that is used to see the blogs of several user creations and sharing their thoughts and also added authentication with Auth0.",
      "repo": "https://github.com/CyberStanko/API-Blog-App"
    },
    {
      "title": "Flight Booking System",
      "description": "Developed a flight booking system using Python and FilesHandling in Python. This system allows the user to book a flight, cancel a flight, and view the flight details, and the admin can approve or reject the flight booking.",
      "code": "Total = 150\nPrice = 2000\nBt = 0\nz = 100  # Initializing z globally (for unique PassengerID)\nb = []  # List to store all passenger data\nk = ['Name', 'Age', 'Gender', 'Password', 'Passengerid', 'tickets', 'Status']  # Keys for passenger data\n\n# Function to save data to a file\ndef save_data():\n    with open(\"passengers_data.txt\", \"w\") as f:\n        for passenger in b:\n            f.write(str(passenger) + \"\\n\")\n\n# Function to load data from the file\ndef load_data():\n    try:\n        with open(\"passengers_data.txt\", \"r\") as f:\n            for line in f:\n                data = eval(line.strip())  # Evaluates the string to a dictionary\n                b.append(data)\n    except FileNotFoundError:\n        pass  # If the file doesn't exist, it's not a problem\n\n# Function for passenger operations (sign up, login, ticket booking, etc.)\ndef Passenger(z, Total, Price, Bt):\n    while True:\n        print('1. Signup')\n        print('2. Login')\n        print('3. Go back')\n        print('Enter your choice:')\n        m = int(input())  \n\n        if m == 1:\n            print('Enter your name:')\n            name = input()\n            print('Your Age:')\n            age = int(input())\n            if age > 18:\n                print('Enter your password:')\n                password = int(input())\n                print('Enter your gender:')\n                gender = input().lower()\n                if gender not in ('male', 'female', 'others'):\n                    print('Invalid gender input')\n                    continue\n                newid = name[0] + gender[0] + str(z)  # Unique ID for passenger\n                passenger_data = {\n                    'Name': name,\n                    'Age': age,\n                    'Gender': gender,\n                    'Password': password,\n                    'Passengerid': newid,\n                    'tickets': 0,\n                    'Status': 'no tickets booked'\n                }\n                b.append(passenger_data)\n                print(f'You have signed up successfully :)')\n                print(f'Your ID is: {newid}')\n                print(f'Your password is: {password}')\n                z += 1  # Increment z for the next passenger ID\n                save_data()  # Save the new data\n            else:\n                print('You are not eligible to sign up.')\n\n        elif m == 2:\n            print('Enter your ID:')\n            pid = input()\n            print('Enter your password:')\n            pwd = int(input())\n            f = True\n            for i in range(len(b)):\n                if b[i]['Passengerid'] == pid and b[i]['Password'] == pwd:\n                    print('Login successful')\n                    f = False\n                    while True:\n                        print('1. Check availability and fare')\n                        print('2. Book Ticket')\n                        print('3. Check booking status')\n                        print('4. Go Back')\n                        print('Enter your choice:')\n                        e = int(input())\n                        if e == 1:\n                            print(f'Total no. of tickets: {Total}')\n                            print(f'Price per ticket: {Price}')\n                            print(f'No. of tickets booked: {Bt}')\n                            print(f'No. of tickets available: {Total - Bt}')\n                        elif e == 2:\n                            print(f'Enter number of tickets to book (Max {Total - Bt}):')\n                            tickets = int(input())\n                            if tickets <= Total - Bt:\n                                b[i]['tickets'] = tickets\n                                b[i]['Status'] = 'waiting'\n                                Bt += tickets  # Update total booked tickets\n                                print(f'Your ticket is in the waiting list. Tickets booked: {tickets}')\n                            else:\n                                print('Not enough tickets available.')\n                        elif e == 3:\n                            if b[i]['Status'] == 'waiting':\n                                print('Your ticket is in the waiting list.')\n                            elif b[i]['Status'] == 'Approved':\n                                print('Your ticket is approved!')\n                            elif b[i]['Status'] == 'no tickets booked':\n                                print('You have not booked any tickets.')\n                            else:\n                                print('Tickets cancelled')\n                        elif e == 4:\n                            break\n                if not f:\n                    break\n            if f:\n                print('Invalid credentials')\n                \n        elif m == 3:\n            break\n        else:\n            print('Invalid input')\n        \n    return z, Total, Price, Bt\n\n# Function for cashier operations (approve, cancel tickets, view report)\ndef Cashier(Total, Bt):\n    cid = 111  # Cashier ID\n    cpd = 1    # Cashier password\n    while True:\n        print(\"1. Login\")\n        print(\"2. Exit\")\n        print(\"Enter choice:\")\n        q = int(input())\n        if q == 1:\n            print('Enter Cashier id:')\n            h = int(input())\n            print('Enter Cashier password:')\n            x = int(input())\n            if cid == h and cpd == x:\n                print('Login successful')\n                while True:\n                    print('1. Approve Ticket')\n                    print('2. Cancel Ticket')\n                    print('3. Report view')\n                    print('4. Logout')\n                    r = int(input('Select:'))\n                    if r == 1:\n                        approved_count = 0\n                        for i in b:\n                            if i['Status'] == 'waiting' and i['tickets'] > 0:\n                                print(i)\n                                u = input(f'Enter passenger id to approve ticket for {i[\"Name\"]}: ')\n                                if u == i['Passengerid']:\n                                    i['Status'] = 'Approved'\n                                    Total -= i['tickets']  # Decrease total available tickets\n                                    Bt += i['tickets']  # Increase total booked tickets\n                                    approved_count += 1\n                                    print(f'Ticket Approved for {i[\"Name\"]}')\n                                    save_data()  # Save data after approval\n                                else:\n                                    print('Invalid passenger ID or ticket already approved.')\n                        if approved_count == 0:\n                            print('No waiting tickets to approve.')\n\n                    elif r == 2:\n                        canceled_count = 0\n                        for i in b:\n                            if i['Status'] != 'no tickets booked':\n                                print(i)\n                                u = input(f'Enter passenger id to cancel ticket for {i[\"Name\"]}: ')\n                                if u == i['Passengerid'] and i['Status'] != 'Cancelled' and i['Status'] != 'Approved':\n                                    i['Status'] = 'Cancelled'\n                                    Bt -= i['tickets']  # Decrease the total booked tickets\n                                    i['tickets'] = 0\n                                    canceled_count += 1\n                                    print(f'Ticket cancelled for {i[\"Name\"]}')\n                                    save_data()  # Save data after cancellation\n                        if canceled_count == 0:\n                            print('No tickets available to cancel.')\n\n                    elif r == 3:\n                        # Generate and display the report\n                        print(\"\\nPassenger Report:\")\n                        for i in b:\n                            print(f\"ID: {i['Passengerid']}, Name: {i['Name']}, Tickets: {i['tickets']}, Status: {i['Status']}\")\n                        # Save the report to file\n                        with open(\"report.txt\", \"w\") as f:\n                            for i in b:\n                                f.write(f\"ID: {i['Passengerid']}, Name: {i['Name']}, Tickets: {i['tickets']}, Status: {i['Status']}\\n\")\n                        print(\"Report saved to report.txt\")\n\n                    elif r == 4:\n                        break\n            else:\n                print('Wrong ID or Password')              \n        else:\n            return Total, Bt\n\n# Main function that runs the program\ndef main():\n    global z, Total, Price, Bt  # Declare global variables at the top of the function\n\n    print('\\t\\t\\t\\t\\tFLIGHT RESERVATION SYSTEM\\t\\t\\t\\t')\n    load_data()  # Load data from the file\n    while True:\n        print('1. Passenger')\n        print('2. Cashier')\n        print('3. Exit')\n        print('Enter your choice:')\n        n = int(input())\n        if n == 1:\n            z, Total, Price, Bt = Passenger(z, Total, Price, Bt)\n        elif n == 2:\n            Total, Bt = Cashier(Total, Bt)\n        elif n == 3:\n            print(\"Thank you! Visit again :)\")\n            break\n        else:\n            print(\"Invalid Input\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "title": "Examination System",
      "description": "Developed a examination system using Python and FilesHandling in Python. This system allows teacher to add questions and students and students to answer the questions and also the teacher can see the result of the students.",
      "code": "class Staff:\n    sid=100\n    slist={}\n    f=False\n    \nclass Exam:\n   ques=[]\n   nq=0\n\ndef stafLogin():\n    while(True):\n        print(\"1.Create Exam \\n2.Approve\\n3.Report\\n4.Logout\\n\")\n        ch=int(input(\"Enter choice: \"))\n        if ch==1:\n            if Staff.f:\n                print(\"You have already created the exam\\n\\n\")\n            else:\n                Staff.f=True\n                try:\n                    n=int(input(\"Enter No of Questions: \"))\n                except:\n                    print(\"Enter valid Number...\\n\")\n                    try:\n                        n=int(input(\"Enter No of Questions: \"))\n                    except:\n                        n=0\n                Exam.nq=n\n                for i in range(1,n+1):\n                    print(\"Enter Question: \",i)\n                    q=input() \n                    op1=input(\"Option 1: \")\n                    op2=input(\"Option 2: \")\n                    op3=input(\"Option 3: \")\n                    ans=input(\"Answer: \")\n                    Exam.ques.append([q,op1,op2,op3,ans])\n        elif ch==2:\n            for i in Staff.slist:\n                if Staff.slist[i][4]==\"Pending\\n\\n\":\n                    if Staff.slist[i][3]>=Exam.nq/2:\n                        Staff.slist[i][4]=\"Pass\\n\\n\"\n                    else:\n                        Staff.slist[i][4]=\"Fail\\n\\n\"\n        elif ch==3:\n            file=open(\"Sk.txt\",\"w\")\n            s=\"\"\n            for i in Staff.slist:\n                file.write(\"Name \\t Roll No \\t Mark \\t Grade \\n\")\n                s=str(Staff.slist[i][0])+\"\\t\"+str(Staff.slist[i][2])+\"\\t\"+str(Staff.slist[i][3])+\"\\t\"+str(Staff.slist[i][4])\n                file.write(s+'\\n')\n                file.close()\n        else:\n            break\n       \ndef stdLogin(reg):\n    while(True):\n        r=0\n        print(\"1. Attend Exam \\n2.Show Status \\n3.Sign Out\\n\")\n        c=int(input(\"Enter Your Choice: \"))\n        if c==1:\n            if Staff.f==False:\n                print(\"Exam Not Created Yet Try again next time....\\n\\n\")\n            else:\n                Staff.slist[reg][4]=\"Pending\"\n                mark=0\n                for i in Exam.ques:\n                    print(\"Question \",(r+1))\n                    print(i[0])\n                    print(\"Option 1: \",i[1])\n                    print(\"Option 2: \",i[2])\n                    print(\"Option 3: \",i[3])\n                    ans=input(\"Enter your Answer: \")\n                    if ans==i[4]:\n                        mark+=50\n                    r+=1\n                Staff.slist[reg][3]=mark\n                if mark>=50:\n                    Staff.slist[reg][4]=\"Good\"\n                elif mark>80:\n                    Staff.slist[reg][4]=\"Excellent\"\n                else:\n                    Staff.slist[reg][4]=\"Fail\"\n        elif c==2:\n            print(\"\\n********************Student Status**********************\\n\\n\")\n            print(*Staff.slist[reg],sep=\" \")\n        else:\n            break\n\nprint(\"\\n---------------------------------------------------------------------------------------\")       \nprint(\"                                        EXAMINATION                                      \")  \nprint(\"---------------------------------------------------------------------------------------\\n\\n\") \nwhile(True):\n    print(\"1.Staff \\n2.Student\\n3.Exit\\n\")\n    c=int(input(\"Enter choice: \"))\n    if c==1:\n        us=input(\"Enter Username: \")\n        ps=input(\"Enter Password: \")\n        if us==\"Stanko\" and ps==\"]]]]\":\n            print(\"Loged in Successfully....   :)\\n\\n\")\n            stafLogin()\n        else:\n            print(\"Username/Password Incorrect.....   :(\\n\\n\")\n    elif c==2:\n        while(True):\n            print(\"1.Sign Up\\n2.Sign In\\n3.Back\\n\")\n            ch=int(input(\"Enter Your Choice: \"))\n            if ch==1:\n                sname=input(\"Enter Name: \")\n                spass=input(\"Enter pass: \")\n                print(\"Your Register No is : \",Staff.sid)\n                Staff.slist[Staff.sid]= [sname,spass,Staff.sid,\"0\",\"Not Attended\"]\n                Staff.sid+=1\n                \n            elif ch==2:\n                reg=int(input(\"Enter Your Register No: \"))\n                pss=input(\"Enter password: \")\n                if Staff.slist[reg][1]==pss:\n                    print(\"Login successfully......\\n\\n\")\n                    stdLogin(reg)\n                else:\n                    print(\"Incorrect ID/Password......\\n\\n\")\n            elif ch==3:\n                break\n            else:\n                print(\"Invalid Input    :(\\n\\n\")\n    elif c==3:\n        print(\"Thank You visit Again   :)\\n\\n\")\n        break\n    else:\n        print(\"Invalid Input   :(\\n\\n\")"
    },
    {
      "title": "LIBRARY MODULE",
      "description": "Module has interface to user and admin access to lend and return for user, add and report for admin. Used Structure for Storage in C and ArrayList in JAVA.",
      "code": "import java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.*;\n\nclass Main {\n    static Scanner sc = new Scanner(System.in);\n    static ArrayList<ArrayList<String>> books = new ArrayList<>(); // Book list: [bookName, isAvailable]\n    static ArrayList<ArrayList<String>> students = new ArrayList<>(); // Student list: [name, id, password]\n    static ArrayList<ArrayList<String>> issuedBooks = new ArrayList<>(); // Issued books: [bookName, studentName, studentId]\n    static ArrayList<String> log = new ArrayList<>(); // Log history\n    static int studentIdCounter = 100;\n\n    public static void main(String[] args) {\n        while (true) {\n            System.out.println(\"1.Admin\\n2.Student\\n3.Exit\\nSelect: \");\n            int n = sc.nextInt();\n            switch (n) {\n                case 1:\n                    admin();\n                    break;\n                case 2:\n                    student();\n                    break;\n                case 3:\n                    System.exit(0);\n                default:\n                    System.out.println(\"Invalid Input\");\n            }\n        }\n    }\n\n    static void admin() {\n        System.out.println(\"Enter Admin Password: \");\n        int pwd = sc.nextInt();\n        if (pwd != 123) {\n            System.out.println(\"Invalid Password\");\n            return;\n        }\n        while (true) {\n            System.out.println(\"1.Add Book\\n2.View Issued Books\\n3.Generate Report\\n4.Logout\\nSelect: \");\n            int x = sc.nextInt();\n            switch (x) {\n                case 1:\n                    System.out.println(\"Enter Book Name: \");\n                    String bookName = sc.next();\n                    ArrayList<String> book = new ArrayList<>();\n                    book.add(bookName);\n                    book.add(\"true\");\n                    books.add(book);\n                    System.out.println(\"Book Added Successfully\");\n                    break;\n                case 2:\n                    if (log.isEmpty()) {\n                        System.out.println(\"No Books Issued or Returned Yet\");\n                    } else {\n                        System.out.println(\"Lending and Returning History:\");\n                        for (String record : log) {\n                            System.out.println(record);\n                        }\n                    }\n                    break;\n                case 3:\n                    generateReport();\n                    System.out.println(\"File generated after the code ends.\");\n                    break;\n                case 4:\n                    return;\n                default:\n                    System.out.println(\"Invalid Input\");\n            }\n        }\n    }\n\n    static void student() {\n        System.out.println(\"1.Signup\\n2.Signin\\n3.Back\\nSelect: \");\n        int x = sc.nextInt();\n        switch (x) {\n            case 1:\n                System.out.println(\"Enter your name: \");\n                String name = sc.next();\n                System.out.println(\"Create Password: \");\n                String password = sc.next();\n                String newId = String.valueOf(studentIdCounter++);\n                ArrayList<String> student = new ArrayList<>();\n                student.add(name);\n                student.add(newId);\n                student.add(password);\n                students.add(student);\n                System.out.println(\"Registered Successfully\");\n                System.out.println(\"Your ID: \" + newId + \" and Password: \" + password);\n                break;\n            case 2:\n                System.out.println(\"Enter ID: \");\n                String id = sc.next();\n                System.out.println(\"Enter Password: \");\n                String pass = sc.next();\n                ArrayList<String> loggedInStudent = null;\n                for (ArrayList<String> studentEntry : students) {\n                    if (studentEntry.get(1).equals(id) && studentEntry.get(2).equals(pass)) {\n                        loggedInStudent = studentEntry;\n                        break;\n                    }\n                }\n                if (loggedInStudent == null) {\n                    System.out.println(\"Incorrect Credentials\");\n                    return;\n                }\n                while (true) {\n                    System.out.println(\"1.View Books\\n2.Lend Book\\n3.Return Book\\n4.Logout\\nSelect: \");\n                    int choice = sc.nextInt();\n                    switch (choice) {\n                        case 1:\n                            for (ArrayList<String> book : books) {\n                                System.out.println(\"Book: \" + book.get(0) + \", Available: \" + (book.get(1).equals(\"true\") ? \"Yes\" : \"No\"));\n                            }\n                            break;\n                        case 2:\n                            System.out.println(\"Enter Book Name to Lend: \");\n                            String lendBookName = sc.next();\n                            boolean found = false;\n                            for (ArrayList<String> book : books) {\n                                if (book.get(0).equals(lendBookName) && book.get(1).equals(\"true\")) {\n                                    book.set(1, \"false\");\n                                    ArrayList<String> issue = new ArrayList<>();\n                                    issue.add(lendBookName);\n                                    issue.add(loggedInStudent.get(0));\n                                    issue.add(loggedInStudent.get(1));\n                                    issuedBooks.add(issue);\n                                    log.add(\"Book: \" + lendBookName + \" issued to \" + loggedInStudent.get(0) + \" (ID: \" + loggedInStudent.get(1) + \")\");\n                                    System.out.println(\"Book Lended Successfully\");\n                                    found = true;\n                                    break;\n                                }\n                            }\n                            if (!found) {\n                                System.out.println(\"Book Not Available or Not Found\");\n                            }\n                            break;\n                        case 3:\n                            System.out.println(\"Enter Book Name to Return: \");\n                            String returnBookName = sc.next();\n                            boolean returned = false;\n                            Iterator<ArrayList<String>> iterator = issuedBooks.iterator();\n                            while (iterator.hasNext()) {\n                                ArrayList<String> issue = iterator.next();\n                                if (issue.get(0).equals(returnBookName) && issue.get(2).equals(loggedInStudent.get(1))) {\n                                    for (ArrayList<String> book : books) {\n                                        if (book.get(0).equals(returnBookName)) {\n                                            book.set(1, \"true\");\n                                            break;\n                                        }\n                                    }\n                                    log.add(\"Book: \" + returnBookName + \" returned by \" + loggedInStudent.get(0) + \" (ID: \" + loggedInStudent.get(1) + \")\");\n                                    iterator.remove();\n                                    System.out.println(\"Book Returned Successfully\");\n                                    returned = true;\n                                    break;\n                                }\n                            }\n                            if (!returned) {\n                                System.out.println(\"Book Not Found in Your Issued List\");\n                            }\n                            break;\n                        case 4:\n                            return;\n                        default:\n                            System.out.println(\"Invalid Input\");\n                    }\n                }\n            case 3:\n                return;\n            default:\n                System.out.println(\"Invalid Input\");\n        }\n    }\n\n    static void generateReport() {\n        try (FileWriter writer = new FileWriter(\"Report.txt\")) {\n            writer.write(\"Report Generated:\\n\\n\");\n\n            writer.write(\"Issued Books:\\n\");\n            if (issuedBooks.isEmpty()) {\n                writer.write(\"No Books Currently Issued\\n\");\n            } else {\n                for (ArrayList<String> issue : issuedBooks) {\n                    writer.write(\"Book: \" + issue.get(0) + \", Issued to: \" + issue.get(1) + \", ID: \" + issue.get(2) + \"\\n\");\n                }\n            }\n\n            writer.write(\"\\nLog History:\\n\");\n            if (log.isEmpty()) {\n                writer.write(\"No Lending or Returning Activities Yet\\n\");\n            } else {\n                for (String record : log) {\n                    writer.write(record + \"\\n\");\n                }\n            }\n\n            writer.write(\"\\nRegistered Students:\\n\");\n            if (students.isEmpty()) {\n                writer.write(\"No Students Registered\\n\");\n            } else {\n                for (ArrayList<String> student : students) {\n                    writer.write(\"Name: \" + student.get(0) + \", ID: \" + student.get(1) + \", Password: \" + student.get(2) + \"\\n\");\n                }\n            }\n        } catch (IOException e) {\n            System.out.println(\"Error generating report: \" + e.getMessage());\n        }\n    }\n}"
    },
    {
      "title": "Billing System",
      "description": "Developed a billing system using Java and Files Handling in JAVA. It is a simple system that allows the user to add, delete, and update the items and also calculate the total amount of the items.",
      "code": "import java.util.*;\nimport java.io.*;\n\nclass Work {\n    Scanner sc = new Scanner(System.in);\n    public ArrayList<String> cs = new ArrayList<String>();\n    public ArrayList<String> cp = new ArrayList<String>();\n    public ArrayList<String> stnam = new ArrayList<String>();\n    public ArrayList<Integer> stqty = new ArrayList<Integer>();\n    public ArrayList<Integer> stprc = new ArrayList<Integer>();\n    public ArrayList<Double> sttax = new ArrayList<Double>();\n    public ArrayList<String> bnam = new ArrayList<String>();\n    public ArrayList<Integer> bqty = new ArrayList<Integer>();\n    public ArrayList<Integer> bprc = new ArrayList<Integer>();\n    public ArrayList<Double> btax = new ArrayList<Double>();\n\n    public void check() {\n        while (true) {\n            System.out.println(\"\\n1.Login\\n2.Exit\\n\");\n            int chs = sc.nextInt();\n            if (chs == 1) {\n                System.out.print(\"\\nLog in : \");\n                int pass = sc.nextInt();\n                if (pass == 123) {\n                    System.out.println(\"\\nSuccessfully Logged In ...!\\n\");\n                    disp();\n                } else\n                    System.out.println(\"\\nIncorrect Password  :(\\n\");\n            } else if (chs == 2) {\n                System.out.println(\"\\nThank You, visit again   :)\\n\");\n                break;\n            } else\n                System.out.println(\"\\nInvalid Input   :(\\n\");\n        }\n    }\n\n    public void disp() {\n        while (true) {\n            System.out.println(\"**********************************************************************************************************\");\n            System.out.println(\"\\n1.Add Cashier\\n2.Report\\n3.Cashier Details\\n4.Exit\\n\\n\");\n            int c1 = sc.nextInt();\n            if (c1 == 1)\n                addcas();\n            else if (c1 == 2)\n                report();\n            else if (c1 == 3)\n                discas();\n            else if (c1 == 4) {\n                System.out.println(\"\\nThank You, visit again  :)\\n**********************************************************************************************************\\n\");\n                break;\n            } else\n                System.out.println(\"\\nInvalid Input  :(\\n\");\n        }\n    }\n\n    public void addcas() {\n        System.out.print(\"\\nEnter Cashier Name : \");\n        cs.add(sc.next());\n        System.out.print(\"\\nEnter Password for Cashier : \");\n        cp.add(sc.next());\n        System.out.println(\"\\nCashier Added...!\\n\");\n    }\n\n    public void discas() {\n        System.out.println();\n        for (int i = 0; i < cs.size(); i++) {\n            System.out.println(\"\\n\\t\" + cs.get(i) + \" ---pass---> \" + cp.get(i));\n        }\n        System.out.println();\n    }\n\n    public void report() {\n        System.out.print(\"\\nReport:\\n\");\n        System.out.println(\"\\n\\t\\t---------Stock Details---------\\n\");\n        if (stqty.size() == 0) {\n            System.out.println(\"\\nStock is Empty for now !\\n\");\n            return;\n        }\n        try {\n            FileWriter fw = new FileWriter(\"Report.txt\");\n            for (int i = 0; i < stnam.size(); i++) {\n                fw.write(i+1+\".\"+stnam.get(i) + \"____\" + stqty.get(i) + \"____\" + stprc.get(i) + \"_ .\\n\");\n            }\n            fw.close();\n            System.out.println(\"Stock details written to Report.txt\");\n        } catch (IOException e) {\n            System.out.println(\"\\n\" + e);\n        }\n    }\n\n    public void caschk() {\n        while (true) {\n            System.out.println(\"\\n\\t\\t---------Log in---------\\n\");\n            System.out.println(\"\\n1.Login\\n2.Exit\");\n            int c5 = sc.nextInt();\n            if (c5 == 1) {\n                System.out.println(\"Username : \");\n                String username = sc.next();\n                System.out.println(\"Password : \");\n                String password = sc.next();\n                boolean auth = false;\n                for (int i = 0; i < cs.size(); i++) {\n                    if (cs.get(i).equals(username) && cp.get(i).equals(password)) {\n                        auth = true;\n                        break;\n                    }\n                }\n                if (auth) {\n                    System.out.println(\"\\nLogin successful!\\n\");\n                    disp1();\n                } else\n                    System.out.println(\"Login failed. Invalid username or password.\");\n            } else if (c5 == 2) {\n                System.out.println(\"\\nThank You, visit again  :)\\n\");\n                break;\n            } else\n                System.out.println(\"\\nInvalid Input   :(\\n\");\n        }\n    }\n\n    public void disp1() {\n        while (true) {\n            System.out.println(\"\\n**********************************************************************************************************\\n\");\n            System.out.println(\"\\n1.Stock Entry\\n2.Bill Entry\\n3.Exit\\n\\n\");\n            int c2 = sc.nextInt();\n            if (c2 == 1) {\n                stken();\n            } else if (c2 == 2) {\n                bilen();\n            } else if (c2 == 3) {\n                System.out.println(\"\\nThank You, visit again  :)\");\n                break;\n            } else {\n                System.out.println(\"\\nInvalid Input  :(\\n\");\n            }\n        }\n    }\n\n    int stkcnt = 50;\n    int scount = 0;\n\n    public void stkadd() {\n        System.out.println(\"\\n------ Enter Stock ------\\nEnter Name:\\n\");\n        stnam.add(sc.next());\n        System.out.println(\"\\nEnter Quantity:\\n\");\n        stqty.add(sc.nextInt());\n        System.out.println(\"\\nEnter Price:\\n\");\n        stprc.add(sc.nextInt());\n        System.out.println(\"\\nEnter Tax:\\n\");\n        sttax.add(sc.nextDouble());\n    }\n\n    public void stkupdt() {\n        System.out.println(\"\\nEnter the Name of a Product to Update :\\n\");\n        String upd = sc.next();\n        Boolean flag = false;\n        for (int i = 0; i < stnam.size(); i++) {\n            if (upd.equalsIgnoreCase(stnam.get(i))) {\n                flag = true;\n                System.out.print(\"\\nEnter the price for \" + stnam.get(i) + \" : \");\n                int price = sc.nextInt();\n                System.out.print(\"\\nEnter the Quantity for \" + stnam.get(i) + \" : \");\n                int quantity = sc.nextInt();\n                System.out.print(\"\\nEnter the Tax for \" + stnam.get(i) + \" : \");\n                double tax = sc.nextDouble();\n\n                stprc.set(i, price);\n                stqty.set(i, quantity);\n                sttax.set(i, tax);\n\n                System.out.println(\"\\n\\nStock Updated...!\\n\");\n                break;\n            } else\n                flag = false;\n        }\n        if (!flag)\n            System.out.println(\"\\nStock Not Found  :(\\n\");\n\n    }\n\n    public void stdel() {\n        Boolean indi = false;\n        System.out.print(\"\\nEnter name of the Stock to Delete : \");\n        String delst = sc.next();\n        for (int i = 0; i < stnam.size(); i++) {\n            if (delst.equalsIgnoreCase(stnam.get(i))) {\n                indi = true;\n                stnam.remove(i);\n                stprc.remove(i);\n                stqty.remove(i);\n                sttax.remove(i);\n                System.out.println(\"\\n\\nStock Deleted...!\\n\");\n                break;\n            } else\n                indi = false;\n        }\n        if (!indi)\n            System.out.println(\"\\nStock Not Found  :(\\n\");\n    }\n\n    public void stshow() {\n        System.out.println(\"\\n\\t\\t---------Stock Details---------\\n\");\n        if (stnam.size() == 0) {\n            System.out.println(\"\\nStock is Empty for now !\\n\");\n            return;\n        }\n        for (int i = 0; i < stnam.size(); i++) {\n            System.out.print(\"\\n\\t\" + stnam.get(i) + \"____\" + stqty.get(i) + \"____\" + stprc.get(i) + \"____\" + sttax.get(i) + \".\");\n        }\n    }\n\n    public void stken() {\n        System.out.print(\"\\n\\t\\t---------Stock Entry---------\\n\");\n        while (true) {\n            System.out.println(\"\\n1.Add\\n2.Update\\n3.Delete\\n4.Show\\n5.Exit\\n\");\n            int c3 = sc.nextInt();\n            if (c3 == 1) {\n                stkadd();\n            } else if (c3 == 2) {\n                stkupdt();\n            } else if (c3 == 3) {\n                stdel();\n            } else if (c3 == 4) {\n                stshow();\n            } else if (c3 == 5) {\n                System.out.println(\"\\nThank You, visit again  :)\\n\");\n                break;\n            } else\n                System.out.println(\"\\nInvalid Input  :(\\n\");\n        }\n    }\n\n    public void bilen() {\n        System.out.print(\"\\n\\t\\t---------Bill Entry---------\\n\");\n        while (true) {\n            System.out.println(\"\\n1.Add\\n2.Show\\n3.Exit\\n\");\n            int c4 = sc.nextInt();\n            if (c4 == 1) {\n                badd();\n            } else if (c4 == 2) {\n                bdis();\n            } else if (c4 == 3) {\n                System.out.println(\"\\nThank You, visit again  :)\\n\");\n                break;\n            } else\n                System.out.println(\"\\nInvalid Input  :(\\n\");\n        }\n    }\n\n    public void badd() {\n        System.out.println(\"\\n--------Enter Stock--------\\n\");\n        System.out.println(\"\\nEnter Stock Name:\");\n        bnam.add(sc.next());\n        System.out.println(\"\\nEnter Stock Quantity:\");\n        bqty.add(sc.nextInt());\n        System.out.println(\"\\nEnter Stock Price:\");\n        bprc.add(sc.nextInt());\n        System.out.println(\"\\nEnter Stock Tax:\");\n        btax.add(sc.nextDouble());\n        System.out.println(\"\\nBill Added Successfully  !\\n\");\n    }\n\n    public void bdis() {\n    System.out.println(\"\\n---------Bill Details---------\\n\");\n    if (bnam.size() == 0) {\n        System.out.println(\"\\nBill Empty!  :(\\n\");\n    } else {\n        System.out.println(\"Item Name\\tQuantity\\tPrice\\t\");\n        for (int i = 0; i < bnam.size(); i++) {\n            System.out.println(bnam.get(i) + \"____\" + bqty.get(i) + \"_____\" + bprc.get(i) + \"__ .\\n\");\n        }\n    }\n}\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        Work wk = new Work();\n        while (true) {\n            System.out.print(\"Choose :\\n1.Owner\\n2.Cashier\\n3.Exit\\n\\n\");\n            int n = sc.nextInt();\n            if (n == 1) {\n                System.out.println();\n                wk.check();\n            } else if (n == 2) {\n                System.out.println();\n                wk.caschk();\n            } else if (n == 3) {\n                System.out.println();\n                System.out.print(\"\\nThank You, visit again :)\\n**********************************************************************************************************\\n\");\n                break;\n            } else\n                System.out.print(\"\\nInvalid Input  :(\\n\");\n        }\n    }\n}"
    },
    {
      "title": "SimplifAi",
      "description": "This is a web portal for an organization for tracking the attendance, work progress like what are the projects the employee assigned to and what are the tasks they did in it and also salary crediting options are also in this portal."
    },
    {
      "title": "IoT based Hospital Management and Patient Caring System [REDIX]",
      "description": "Developed an IoT-based system to monitor patient presence and vital parameters, with cloud integration for data analysis and automated alerts for threshold breaches; this project's patent got granted and also published IEEE paper."
    },
    {
      "title": "FARMGROW",
      "description": "Developed a web application offering a private cloud vault for farmers to securely store personal property details, Claimed Copyright for this project."
    },
    {
      "title": "LEGATEE",
      "description": "Developed a mobile app for beneficiaries to track fund transfers and applied schemes; got selected for the final round in the Smart India Hackathon (SIH) India-level competition."
    }
  ],
  "achievements": [
    "In NearTechPod out of 25 freshers I'm one of the three members chosen to client side project for working good and completing the tasks on time.",
    "Achieved a perfect score of 600/600 (100%) in the Programming Round of TCS NQT IT and secured an impressive 74.30% overall, demonstrating exceptional technical expertise and strong aptitude skills.",
    "My project IoT based Hospital Management and Patient Caring System [REDIX] filed for patent now it got granted.",
    "Project FARMGROW was projected to The Trichy Collector and he forwarded it to CM CELL and also claimed Copyrights for this project."
  ],
  "interests": [
    "Developing Website or Application",
    "Learning New Technologies",
    "Problem Solving",
    "Environmental adaptability"
  ],
  "languages": [
    "Tamil",
    "English"
  ]
}